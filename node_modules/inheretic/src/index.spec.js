describe('inherit', () => {
  const cleanupTmp = true;
  const fs = require('fs');
  beforeEach(() => {
    fs.mkdirSync('./tmp');
    require('fs-extra').copySync('example-app', './tmp');
  });
  afterEach((done) => {
    if(cleanupTmp){
      require('rimraf')('./tmp', done);
    }else{
      done();
    }
  });
  function readPackage(moduleName){
    return fs.readFileSync(`./tmp/packages/node_modules/${moduleName}/package.json`, { encoding: 'utf8' });
  }
  it('does nothing if module doesn\'t specify parent', () => {
    const readFile = () => readPackage('child-no-parent');
    const noParentJson = readFile();
    expect(noParentJson).toMatch('"name": "child-no-parent"');
    require('./index')('tmp');
    expect(noParentJson).toEqual(readFile());
  });
  it('copies attributes from parent to child module', () => {
    const readFile = () => readPackage('child-leaf');
    expect(JSON.parse(readFile()).devDependencies).toBe(undefined);
    require('./index')('tmp');
    const exampleAppJson = fs.readFileSync(`./tmp/package.json`, { encoding: 'utf8' });
    expect(JSON.parse(readFile()).devDependencies).toEqual(
      JSON.parse(exampleAppJson).devDependencies
    );
  });
});
